openapi: 3.0.3
info:
  title: ONDC B2B Mock Implemention
  description: >-
    This is a Mock Server for integrating with ONDC. Currently, it supports B2B.
    An easy way to get started would be to ask yourself the two question -
    _"which network participant am I going to send to?"_ and _"what would be the
    action/on_action I am going to send?"_. With these you can easily construct
    the URL you need to mock and then find that among this list. <br />
  contact:
    email: team@ondc.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about ONDC
  url: https://ondc.org
servers:
  - url: /b2b/bpp
  - url: /b2b/bap
tags:
  - name: B2B
    description: Everything for B2B domain
    externalDocs:
      description: Find out more
      url: >-
        https://github.com/ONDC-Official/ONDC-RET-Specifications/tree/release-2.0.2
  - name: Auth
    description: Endpoints for Authentication
paths:
  /auth/signCheck:
    post:
      tags:
        - Auth
      summary: Check the validity of a authorization token
      # parameters:
      #   - name: authorization
      #     in: header
      #     description: Signed Authorization Header
      #     required: true
      #     type: string
      security:
        - ApiKeyAuth: []
      requestBody:
        description: Request Body should contain the log which is signed.
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Request Body should contain the log which is signed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_check_response'
           
  /search:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock search request to BPP
      requestBody:
        description: Search Request Log
        content:
          application/json:
            schema:
              $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Search.yaml
            examples:
              search_by_categoy:
                value:
                  $ref: ../../../apps/backend/domain-repos/@retail-b2b/2.0.2/api/components/Examples/B2B/search/search_by_category.yaml#/value
              search_by_fulfillment_end_loc:
                value:
                  $ref: ../../../apps/backend/domain-repos/@retail-b2b/2.0.2/api/components/Examples/B2B/search/search_by_fulfillment_end_loc.yaml#/value
              search_by_item:
                value:
                  $ref: ../../../apps/backend/domain-repos/@retail-b2b/2.0.2/api/components/Examples/B2B/search/search_by_item.yaml#/value
      responses:
        '200':
          description: Successfull response from BPP
          content:
            application/json:
              schema:
                $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /select:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - rfq
              - non-rfq
              - self-pickup
              - exports
              - non-serviceable
              - quantity-unavailable
          description: The Mode the Server needs to run the request in    
      tags:
        - B2B
      summary: Mock select request to BPP
      requestBody:
        description: Select Request Log
        content:
          application/json:
            schema:
              $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Select.yaml
            examples:
              select_BAP_chat:
                $ref: ../../../apps/backend/domain-repos/@retail-b2b/2.0.2/api/components/Examples/B2B/select/select_BAP_chat.yaml#/value
              select_domestic_SelfPickup:
                $ref: ../../../apps/backend/domain-repos/@retail-b2b/2.0.2/api/components/Examples/B2B/select/select_domestic_SelfPickup.yaml#/value
              select_domestic:
                $ref: ../../../apps/backend/domain-repos/@retail-b2b/2.0.2/api/components/Examples/B2B/select/select_domestic.yaml#/value
              select_domestic(Non RFQ):
                $ref: ../../../apps/backend/domain-repos/@retail-b2b/2.0.2/api/components/Examples/B2B/select/select_domestic(Non RFQ).yaml#/value
              select_exports:
                $ref: ../../../apps/backend/domain-repos/@retail-b2b/2.0.2/api/components/Examples/B2B/select/select_exports.yaml#/value
      responses:
        '200':
          description: Successfull response from BPP
          content:
            application/json:
              schema:
                $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /init:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - rfq
              - non-rfq
              - payment-bpp-non-rfq
              - self-pickup
              - exports
              - reject-rfq
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock init request to BPP
      requestBody:
        description: Init Request Log
        content:
          application/json:
            schema:
              $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Init.yaml
      responses:
        '200':
          description: Successfull response from BPP
          content:
            application/json:
              schema:
                $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /confirm:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - rfq
              - non-rfq
              - exports
              - rejected
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock confirm request to BPP
      requestBody:
        description: confirm Request Log
        content:
          application/json:
            schema:
              $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Confirm.yaml
      responses:
        '200':
          description: Successfull response from BPP
          content:
            application/json:
              schema:
                $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /update:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - fulfillment
              - prepaid
              - prepaid-bap
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock update request to BPP
      requestBody:
        description: update Request Log
        content:
          application/json:
            schema:
              $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Update.yaml
      responses:
        '200':
          description: Successfull response from BPP
          content:
            application/json:
              schema:
                $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Response.yaml 
  /status:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - delivered
              - out-for-delivery
              - picked-up
              - proforma-invoice
              - bpp-payment-error
              - bpp-payment
              - self-picked-up
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock status request to BPP
      requestBody:
        description: status Request Log
        content:
          application/json:
            schema:
              $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Status.yaml
      responses:
        '200':
          description: Successfull response from BPP
          content:
            application/json:
              schema:
                $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /on_search:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - rfq
              - non-rfq
              - self-pickup
              - exports
              - bap-chat
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock on search request to BAP
      requestBody:
        description: On Search Request Log
        content:
          application/json:
            schema:
              $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/OnSearch.yaml
      responses:
        '200':
          description: Successfull response from BAP
          content:
            application/json:
              schema:
                $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /on_init:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - rfq
              - non-rfq
              - exports
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock on init request to BAP
      requestBody:
        description: On Init Request Log
        content:
          application/json:
            schema:
              $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/OnInit.yaml
      responses:
        '200':
          description: Successfull response from BAP
          content:
            application/json:
              schema:
                $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /on_select:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
        - in: query
          name: scenario
          required: true
          schema:
            type: string
            enum:
              - rfq
              - non-rfq
              - exports
              - bpp-payment
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock on select request to BAP
      requestBody:
        description: On Select Request Log
        content:
          application/json:
            schema:
              $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/OnSelect.yaml
      responses:
        '200':
          description: Successfull response from BAP
          content:
            application/json:
              schema:
                $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /on_confirm:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock on confirm request to BAP
      requestBody:
        description: On Confirm Request Log
        content:
          application/json:
            schema:
              $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/OnConfirm.yaml
      responses:
        '200':
          description: Successfull response from BAP
          content:
            application/json:
              schema:
                $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /on_update:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock on update request to BAP
      requestBody:
        description: On Update Request Log
        content:
          application/json:
            schema:
              $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/OnUpdate.yaml
      responses:
        '200':
          description: Successfull response from BAP
          content:
            application/json:
              schema:
                $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Response.yaml
  /on_status:
    post:
      parameters:
        - in: query
          name: mode
          required: true
          schema:
            type: string
            enum:
              - sandbox
              - mock
          description: The Mode the Server needs to run the request in
      tags:
        - B2B
      summary: Mock on status request to BAP
      requestBody:
        description: On Status Request Log
        content:
          application/json:
            schema:
              $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/OnStatus.yaml
      responses:
        '200':
          description: Successfull response from BAP
          content:
            application/json:
              schema:
                $ref: ../../../apps/backend/beckn-core/api/transaction/components/io/Response.yaml
components:
  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: authorization  # name of the header, query parameter or cookie
  schemas:
    auth_check_response:
      type: object
      properties:
        message:
          type: string
          example: "Valid Signature"

security:
  - ApiKeyAuth: [] 